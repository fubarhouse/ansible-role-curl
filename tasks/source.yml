---

- name: "CURL | Include OS-specific variables (CentOS)"
  include_vars: "{{ ansible_distribution }}.yml"
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution == "CentOS"

- name: "CURL | Include OS-specific variables (Debian)"
  include_vars: "{{ ansible_os_family }}.yml"
  when: ansible_os_family == "Debian"

- name: "CURL | Include OS-specific variables (RedHat)"
  include_vars: "{{ ansible_distribution }}.yml"
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution != "CentOS"

- name: "CURL | Install dependencies (CentOS)"
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ curl_source_dependencies }}"
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution == "CentOS"

- name: "CURL | Install dependencies (Debian)"
  apt:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ curl_source_dependencies }}"
  when: ansible_os_family == "Debian"

- name: "CURL | Install dependencies (RedHat)"
  dnf:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ curl_source_dependencies }}"
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution != "CentOS"

- name: "CURL | Register string comparrison"
  set_fact:
    curl_compare: "curl {{ curl_version }}"
  changed_when: false

- name: "CURL | Get current version"
  shell: curl --version | cat
  register: curl_version_before
  changed_when: 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Create directory"
  file:
    path: "{{ curl_path }}/curl/curl-{{ curl_version }}"
    state: directory
    mode: 0777
  when: 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Download from git"
  get_url:
    url: "https://github.com/curl/curl/archive/{{ curl_version }}.{{ curl_extension }}"
    dest: "{{ curl_path }}/curl/{{ curl_version }}.{{ curl_extension }}"
    remote_src: yes
    validate_certs: False
  when: 'curl_version == "master"'

- name: "CURL | Download from source"
  get_url:
    url: "{{ curl_source }}/curl-{{ curl_version }}.{{ curl_extension }}"
    dest: "{{ curl_path }}/curl/{{ curl_version }}.{{ curl_extension }}"
  when: 'curl_version_before.stdout.find(curl_compare) == -1'

# Note: requires GNU-Tar &&|| unzip
- name: "CURL | Unarchive"
  unarchive:
    src: "{{ curl_path }}/curl/{{ curl_version }}.{{ curl_extension }}"
    dest: "{{ curl_path }}/curl/"
    creates: "{{ curl_path }}/curl/curl-{{ curl_version }}/README"
  when: 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Build Configuration"
  shell: "./buildconf"
  args:
    chdir: "{{ curl_path }}/curl/curl-{{ curl_version }}"
  when: 'curl_version == "master"'

- name: "CURL | Configure without flags"
  shell: "./configure"
  args:
    chdir: "{{ curl_path }}/curl/curl-{{ curl_version }}"
  when:
  - 'curl_configure_flags is defined'
  - 'curl_configure_flags|length == 0'
  - 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Configure with flags"
  shell: "./configure --{{ curl_configure_flags|join(' --') }}"
  args:
    chdir: "{{ curl_path }}/curl/curl-{{ curl_version }}"
  when:
  - 'curl_configure_flags is defined'
  - 'curl_configure_flags|length > 0'
  - 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Make"
  make:
    chdir: "{{ curl_path }}/curl/curl-{{ curl_version }}"
  when: 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Install"
  make:
    target: install
    chdir: "{{ curl_path }}/curl/curl-{{ curl_version }}"
  when: 'curl_version_before.stdout.find(curl_compare) == -1'

- name: "CURL | Get current version"
  shell: curl --version | cat
  register: curl_version_after
  changed_when: false

- name: "CURL | Verify current version"
  assert:
    that: curl_version in curl_version_after.stdout
  when:
    - curl_version != "master"
    - 'curl_version_after is defined'

- name: "CURL | Verify current version"
  assert:
    that: -DEV in curl_version_after.stdout
  when:
    - curl_version == "master"
    - curl_version_after is defined

- name: "CURL | Cleaning"
  file:
    path: "{{ curl_path }}/curl"
    state: absent
  when: '"curl {{ curl_version }}" not in "{{ curl_version_before.stdout_lines }}"'